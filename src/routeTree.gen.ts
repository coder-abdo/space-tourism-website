/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TechnologyLazyImport = createFileRoute('/technology')()
const DestinationLazyImport = createFileRoute('/destination')()
const CrewLazyImport = createFileRoute('/crew')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TechnologyLazyRoute = TechnologyLazyImport.update({
  path: '/technology',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/technology.lazy').then((d) => d.Route))

const DestinationLazyRoute = DestinationLazyImport.update({
  path: '/destination',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/destination.lazy').then((d) => d.Route))

const CrewLazyRoute = CrewLazyImport.update({
  path: '/crew',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/crew.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/crew': {
      id: '/crew'
      path: '/crew'
      fullPath: '/crew'
      preLoaderRoute: typeof CrewLazyImport
      parentRoute: typeof rootRoute
    }
    '/destination': {
      id: '/destination'
      path: '/destination'
      fullPath: '/destination'
      preLoaderRoute: typeof DestinationLazyImport
      parentRoute: typeof rootRoute
    }
    '/technology': {
      id: '/technology'
      path: '/technology'
      fullPath: '/technology'
      preLoaderRoute: typeof TechnologyLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  CrewLazyRoute,
  DestinationLazyRoute,
  TechnologyLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/crew",
        "/destination",
        "/technology"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/crew": {
      "filePath": "crew.lazy.tsx"
    },
    "/destination": {
      "filePath": "destination.lazy.tsx"
    },
    "/technology": {
      "filePath": "technology.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
